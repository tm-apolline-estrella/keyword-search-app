"""add train tables

Revision ID: 826d7efa32e9
Revises: 7244b1fec49f
Create Date: 2024-09-04 10:46:08.496438

"""

# Import standard library modules
from typing import Sequence, Union

# Import third-party library modules
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# Import local modules
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "826d7efa32e9"
down_revision: Union[str, None] = "7244b1fec49f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "AgentConversationSessionMetadata",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("sessionId", sa.Integer(), nullable=False),
        sa.Column("messageId", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("scoreChangeStreak", sa.Integer(), nullable=False),
        sa.Column("receptionAnalysis", sa.NVARCHAR(), nullable=True),
        sa.Column("receptionScore", sa.DECIMAL(), nullable=True),
        sa.Column("dateCreated", mssql.DATETIME2(), nullable=False),
        sa.Column("dateDeleted", mssql.DATETIME2(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "AgentConversationSession",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("agentId", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("userId", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("dateCreated", mssql.DATETIME2(), nullable=False),
        sa.Column("dateDeleted", mssql.DATETIME2(), nullable=True),
        sa.ForeignKeyConstraint(
            ["userId"],
            ["User.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "AgentConversation",
        sa.Column("id", sa.NVARCHAR(length=1000), autoincrement=False, nullable=False),
        sa.Column("title", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("userId", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("sessionId", sa.Integer(), nullable=False),
        sa.Column("lastMessageDate", mssql.DATETIME2(), nullable=False),
        sa.Column("createdAt", mssql.DATETIME2(), nullable=False),
        sa.Column("updatedAt", mssql.DATETIME2(), nullable=False),
        sa.Column("deletedAt", mssql.DATETIME2(), nullable=True),
        sa.Column("pinnedAt", mssql.DATETIME2(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sessionId"],
            ["AgentConversationSession.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("sessionId"),
    )
    op.create_table(
        "AgentConversationScorecard",
        sa.Column("id", sa.NVARCHAR(length=1000), autoincrement=False, nullable=False),
        sa.Column("conversationId", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("overallPerformance", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("bestQuality", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("areaOfImprovement", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("duration", sa.NVARCHAR(length=1000), nullable=False),
        sa.ForeignKeyConstraint(
            ["conversationId"],
            ["AgentConversation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("conversationId"),
    )
    op.create_table(
        "AgentMessage",
        sa.Column("id", sa.NVARCHAR(length=1000), autoincrement=False, nullable=False),
        sa.Column("conversationId", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("is_bot", sa.Boolean(), server_default=sa.text("0"), nullable=False),
        sa.Column("text", sa.NVARCHAR(), nullable=False),
        sa.Column("token_count", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Boolean(), nullable=True),
        sa.Column("ratingData", sa.NVARCHAR(), nullable=True),
        sa.Column("ratingText", sa.NVARCHAR(), nullable=True),
        sa.Column("createdAt", mssql.DATETIME2(), nullable=False),
        sa.Column("deletedAt", mssql.DATETIME2(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conversationId"],
            ["AgentConversation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "AgentConversationScorecardCategory",
        sa.Column("id", sa.NVARCHAR(length=1000), autoincrement=False, nullable=False),
        sa.Column("scorecardId", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("name", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("rating", sa.NVARCHAR(length=1000), nullable=False),
        sa.Column("analysis", sa.NVARCHAR(), nullable=False),
        sa.Column("recommendation", sa.NVARCHAR(), nullable=False),
        sa.ForeignKeyConstraint(
            ["scorecardId"],
            ["AgentConversationScorecard.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_constraint("Conversation_userId_fkey", "Conversation", type_="foreignkey")
    op.create_foreign_key(None, "Conversation", "User", ["userId"], ["id"])
    op.drop_constraint("Message_conversationId_fkey", "Message", type_="foreignkey")
    op.create_foreign_key(None, "Message", "Conversation", ["conversationId"], ["id"])
    op.drop_constraint(
        "MessageSource_messageId_fkey", "MessageSource", type_="foreignkey"
    )
    op.create_foreign_key(None, "MessageSource", "Message", ["messageId"], ["id"])
    op.alter_column(
        "MessageSuggestion",
        "createdAt",
        existing_type=mssql.DATETIME2(),
        nullable=True,
        existing_server_default=sa.text("(getdate())"),
    )
    op.drop_constraint(
        "MessageSuggestion_messageId_fkey", "MessageSuggestion", type_="foreignkey"
    )
    op.create_foreign_key(None, "MessageSuggestion", "Message", ["messageId"], ["id"])
    op.drop_constraint(
        "RewriteResponse_messageId_fkey", "RewriteResponse", type_="foreignkey"
    )
    op.create_foreign_key(None, "RewriteResponse", "Message", ["messageId"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "RewriteResponse", type_="foreignkey")
    op.create_foreign_key(
        "RewriteResponse_messageId_fkey",
        "RewriteResponse",
        "Message",
        ["messageId"],
        ["id"],
        onupdate="CASCADE",
    )
    op.drop_constraint(None, "MessageSuggestion", type_="foreignkey")
    op.create_foreign_key(
        "MessageSuggestion_messageId_fkey",
        "MessageSuggestion",
        "Message",
        ["messageId"],
        ["id"],
        onupdate="CASCADE",
    )
    op.alter_column(
        "MessageSuggestion",
        "createdAt",
        existing_type=mssql.DATETIME2(),
        nullable=False,
        existing_server_default=sa.text("(getdate())"),
    )
    op.drop_constraint(None, "MessageSource", type_="foreignkey")
    op.create_foreign_key(
        "MessageSource_messageId_fkey",
        "MessageSource",
        "Message",
        ["messageId"],
        ["id"],
        onupdate="CASCADE",
    )
    op.drop_constraint(None, "Message", type_="foreignkey")
    op.create_foreign_key(
        "Message_conversationId_fkey",
        "Message",
        "Conversation",
        ["conversationId"],
        ["id"],
        onupdate="CASCADE",
    )
    op.drop_constraint(None, "Conversation", type_="foreignkey")
    op.create_foreign_key(
        "Conversation_userId_fkey",
        "Conversation",
        "User",
        ["userId"],
        ["id"],
        onupdate="CASCADE",
    )
    op.drop_table("AgentConversationScorecardCategory")
    op.drop_table("AgentMessage")
    op.drop_table("AgentConversationScorecard")
    op.drop_table("AgentConversation")
    op.drop_table("AgentConversationSession")
    op.drop_table("AgentConversationSessionMetadata")
    # ### end Alembic commands ###
